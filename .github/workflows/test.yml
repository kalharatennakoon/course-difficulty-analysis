name: Test Notebook

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create sample dataset
      run: |
        python -c "
        import pandas as pd
        import numpy as np
        import os
        
        # Create data directory
        os.makedirs('data', exist_ok=True)
        
        # Create sample dataset
        np.random.seed(42)
        n_samples = 100
        
        data = {}
        data['instr'] = np.random.choice([1, 2, 3], n_samples)
        data['class'] = np.random.choice(range(1, 14), n_samples)
        data['nb.repeat'] = np.random.choice([0, 1, 2, 3], n_samples)
        data['attendance'] = np.random.choice([0, 1, 2, 3, 4], n_samples)
        data['difficulty'] = np.random.choice([1, 2, 3, 4, 5], n_samples)
        
        for i in range(1, 29):
            data[f'Q{i}'] = np.random.choice([1, 2, 3, 4, 5], n_samples)
        
        df = pd.DataFrame(data)
        df.to_csv('data/TurkiyeStudentEvaluation.csv', index=False)
        print('Sample dataset created for testing')
        "
        
    - name: Test notebook execution
      run: |
        # Test if the notebook can be executed (first few cells)
        python -c "
        import nbformat
        from nbconvert.preprocessors import ExecutePreprocessor
        import pandas as pd
        
        # Load notebook
        with open('course_difficulty_analysis.ipynb', 'r') as f:
            nb = nbformat.read(f, as_version=4)
        
        # Execute first 5 cells only for CI testing
        ep = ExecutePreprocessor(timeout=600, kernel_name='python3')
        
        # Execute limited cells for testing
        for i, cell in enumerate(nb.cells[:5]):
            if cell.cell_type == 'code':
                try:
                    ep.preprocess_cell(cell, {}, i)
                    print(f'Cell {i} executed successfully')
                except Exception as e:
                    print(f'Cell {i} failed: {e}')
                    raise
        
        print('Basic notebook functionality test passed!')
        "
